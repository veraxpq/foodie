{"ast":null,"code":"var _jsxFileName = \"/Users/pengqing/neu/2021/fall/webdev/foodie/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport './vendors/bootstrap/css/bootstrap.min.css';\nimport './vendors/bootstrap/bootstrap.min.css';\nimport './vendors/fontawesome/css/all.min.css';\nimport Register from \"./components/RegisterPage\"; // import {Provider} from \"react-redux\";\n// import {BrowserRouter, Route, Routes} from \"react-router-dom\";\n// import {applyMiddleware, combineReducers, createStore} from \"redux\";\n// import logger from 'redux-logger';\n// const reducer = combineReducers({})\n// const store = createStore(reducer, applyMiddleware(logger));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pengqing/neu/2021/fall/webdev/foodie/src/App.js"],"names":["Register","App"],"mappings":";AAAA;AACA,OAAO,WAAP;AACA,OAAO,2CAAP;AACA,OAAO,uCAAP;AACA,OAAO,uCAAP;AACA,OAAOA,QAAP,MAAqB,2BAArB,C,CACA;AACA;AACA;AACA;AAEA;AACA;;;;;AACA,SAASC,GAAT,GAAe;AACb,sBACI;AAAA,2BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaD;;KAdQA,G;AAgBT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport './vendors/bootstrap/css/bootstrap.min.css';\nimport './vendors/bootstrap/bootstrap.min.css';\nimport './vendors/fontawesome/css/all.min.css';\nimport Register from \"./components/RegisterPage\";\n// import {Provider} from \"react-redux\";\n// import {BrowserRouter, Route, Routes} from \"react-router-dom\";\n// import {applyMiddleware, combineReducers, createStore} from \"redux\";\n// import logger from 'redux-logger';\n\n// const reducer = combineReducers({})\n// const store = createStore(reducer, applyMiddleware(logger));\nfunction App() {\n  return (\n      <>\n          <Register/>\n          {/*<Register/>*/}\n          {/*<Provider store={store}>*/}\n          {/*    <BrowserRouter>*/}\n          {/*        <Routes>*/}\n          {/*            <Route path={\"/register\"} exact={true} component={Register}/>*/}\n          {/*        </Routes>*/}\n          {/*    </BrowserRouter>*/}\n          {/*</Provider>*/}\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}